- name: Download packages
  hosts: all
  become: yes
  tasks:
  - name: download packages
    apt:
      pkg:
      - git
      - postgresql
      - postgresql-contrib
      - libpq-dev

- name: actions for bot and db
  hosts: host1
  vars_files:
    - env.yml
  become: yes
  tasks:
  - name: download packages
    apt:
      pkg:
      - python3
      - python3-pip

  - name: send init.sql to host
    copy:
      src: init.sql
      dest: /tmp/init.sql

  - name: change rights
    command: chown postgres:postgres /tmp/init.sql

  - name: replace DB_DATABASE name
    replace:
      path: /tmp/init.sql
      regexp: "DB_DATABASE"
      replace: "{{DB_DATABASE}}"

  - name: replace DB_USER name
    replace:
      path: /tmp/init.sql
      regexp: "DB_USER"
      replace: "{{DB_USER}}"
  - name: replace DB_PASSWORD name
    replace:
      path: /tmp/init.sql
      regexp: "DB_PASSWORD"
      replace: "{{DB_PASSWORD}}"

  - name: replace DB_REPL_USER name
    replace:
      path: /tmp/init.sql
      regexp: "DB_REPL_USER"
      replace: "{{DB_REPL_USER}}"

  - name: replace DB_REPL_PASSWORD name
    replace:
      path: /tmp/init.sql
      regexp: "DB_REPL_PASSWORD"
      replace: "{{DB_REPL_PASSWORD}}"

  - name: run init.sql
    command: /usr/bin/psql -a -f /tmp/init.sql
    become: true
    become_user: postgres
    ignore_errors: true

  - name: change postgresql.conf
    blockinfile:
      path: "/etc/postgresql/{{DB_VERSION}}/main/postgresql.conf"
      block: |
        listen_addresses = '*'
        port = {{DB_PORT}}
        max_wal_senders=10
        wal_level=replica
        hot_standby=on
        max_replication_slots=10
        hot_standby_feedback=on
        log_replication_commands=on

  - name: change pg_hba.conf
    blockinfile:
      path: "/etc/postgresql/{{DB_VERSION}}/main/pg_hba.conf"
      block: |
        local all postgres peer
        host replication all {{ hostvars[inventory_hostname]['ansible_host'] }}/24 scram-sha-256
        host all all {{ hostvars[inventory_hostname]['ansible_host'] }}/32 trust

  - name: restarted host1
    service:
      name: postgresql
      state: restarted

- name: Deployment host2
  hosts: host2
  vars_files:
    - env.yml
  become: true
  tasks:
  - name: change postgresql.conf host2
    become: true
    become_user: postgres
    blockinfile:
      path: "/etc/postgresql/{{DB_VERSION}}/main/postgresql.conf"
      block: |
        listen_addresses = '*'
        port = {{DB_REPL_PORT}}
    ignore_errors: true
  - name: remove data host 2
    command: rm -rf /var/lib/postgresql/{{DB_VERSION}}/
    ignore_errors: true
  - name: replication
    command: pg_basebackup -h {{DB_HOST}} -D /var/lib/postgresql/{{DB_VERSION}}/main/ -p {{DB_PORT}} -U {{DB_REPL_USER}}
    environment:
      PGUSER: "{{DB_REPL_USER}}"
      PGPASSWORD: "{{DB_REPL_PASSWORD}}"
    ignore_errors: true
  - name: chown for host 2
    command: chown -R postgres:postgres /var/lib/postgresql/
    ignore_errors: true
  - name: restarting host 2
    service:
      name: postgresql
      state: restarted

- name: start bot
  hosts: host1
  vars_files:
    - env.yml
  become: yes
  tasks:
  - name: gitclone repository
    git:
      repo: https://github.com/makvict/ptstart_bot.git
      dest: "{{WORKDIR}}/bot"

  - name: install libraries
    pip:
      requirements: "{{WORKDIR}}/bot/requirements.txt"
  - name: copy env
    command: cp /root/ansible/env /root/ansible/bot/.env
  - name: start bot
    command: python3 "{{WORKDIR}}/bot/bot.py"
